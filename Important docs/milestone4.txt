

Milestone 3:

Project Title : EXAM PORTAL

Progress: Started with project and implemented Signin, Signout, SignUp, HomePageController classes

SigninController:

package com.csye6220.esdfinalproject.controller;

import com.csye6220.esdfinalproject.model.User;
import com.csye6220.esdfinalproject.service.UserService;
import jakarta.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class SigninController {


    @Autowired
    UserService userService;
    @GetMapping("/signin*")
    public ModelAndView AuthenticateLoginPage(){
        return new ModelAndView("signin");
    }

    @PostMapping("/signin-action")
    public ModelAndView performValidation(@RequestParam String username, @RequestParam String password, HttpServletRequest request){

        ModelAndView modelAndView = new ModelAndView();

        User user = userService.getUserByusername(username);

        BCryptPasswordEncoder bCryptPasswordEncoder = new BCryptPasswordEncoder();

        if(user == null){
            modelAndView.setViewName("redirect:/signin");
            modelAndView.addObject("error", "Invalid User name!!!");
        }
        else{
            if(bCryptPasswordEncoder.matches(password, user.getPassword())){
                modelAndView.setViewName("redirect:/");
                request.getSession().setAttribute("user", user);
            }
            else {
                modelAndView.setViewName("redirect:/signin*");
                modelAndView.addObject("error", "Invalid Password!!!!");
            }
        }
        return modelAndView;
    }
}

SignoutController:

package com.csye6220.esdfinalproject.controller;


import jakarta.servlet.http.HttpServletRequest;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class SignoutController {

    @GetMapping("/signout*")
    public String AuthenticateSignOut(HttpServletRequest request){
        request.getSession().invalidate();
        return "redirect:/";
    }

}

SignUpController:

package com.csye6220.esdfinalproject.controller;


import com.csye6220.esdfinalproject.model.User;
import com.csye6220.esdfinalproject.model.UserRole;
import com.csye6220.esdfinalproject.service.UserService;
import jakarta.validation.ConstraintViolation;
import jakarta.validation.ConstraintViolationException;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.Size;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import java.util.HashSet;
import java.util.Set;
import java.util.stream.Collectors;

@Controller
@Validated
public class SignUpController {

    @Autowired
    UserService userService;

    @GetMapping("/signup")
    public String redirectToRegistrationPage(){
        return "signup";
    }

    @PostMapping("/register")
    public ModelAndView registerUser(
            @RequestParam(name = "firstname") @Size(min = 2, message = "First Name should be at least 2 characters") String firstName,
            @RequestParam(name = "lastname") @Size(min = 2, message = "Last Name should be at least 2 characters") String lastName,
            @RequestParam(name = "username") String username,
            @RequestParam @Size(min = 8, max = 15, message = "Password length must be between 8 and 15 characters") String password,
            @RequestParam @Email(message = "Please enter valuid Email") String email,
            @RequestParam(name = "role") String role,
            @RequestParam(name = "profile") String profile,
            @RequestParam(name = "phone") String phone
    ){

        ModelAndView modelAndView = new ModelAndView();

        User existingUser = userService.getUserByusername(username);

        if(existingUser != null){
            modelAndView.setViewName("redirect:/signup");
            modelAndView.addObject("error", "email-exists");
            return modelAndView;
        }

        BCryptPasswordEncoder bCryptPasswordEncoder = new BCryptPasswordEncoder();
        User user = new User(firstName, lastName,username, bCryptPasswordEncoder.encode(password),email, UserRole.valueOf(role),phone,profile);

        userService.addUser(user);

        modelAndView.addObject("success", "registration-successful");
        modelAndView.setViewName("redirect:/signin");
        return modelAndView;
    }


    @ExceptionHandler(ConstraintViolationException.class)
    public ModelAndView constraintViolationException(ConstraintViolationException ex){
        Set<String> errors = new HashSet<>();
        if(ex.getConstraintViolations() == null){
            errors.add(ex.getMessage());
        }
        else{
            errors = ex.getConstraintViolations().stream().map(ConstraintViolation::getMessage).collect(Collectors.toSet());
        }
        return new ModelAndView("error", "errors", errors);
    }
}

HomePageController:

package com.csye6220.esdfinalproject.controller;



import com.csye6220.esdfinalproject.model.User;
import com.csye6220.esdfinalproject.model.UserRole;
import com.csye6220.esdfinalproject.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.Banner;
import org.springframework.security.authentication.AnonymousAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.servlet.ModelAndView;

import java.security.Principal;

@Controller
public class HomePageController {


    @Autowired
    private UserService userService;

    @GetMapping("/")
    public ModelAndView Indexview(){
        ModelAndView mv1 = new ModelAndView("index");
        return mv1;
    }

    @GetMapping("/student-page")
    public ModelAndView studentDashboardHandler( Principal principal) {
        ModelAndView mv = new ModelAndView("student-page");

        return mv;
    }

    @GetMapping("/homepage")
    public ModelAndView HomepageHandler(){
        ModelAndView mv = new ModelAndView("homepage");

//        userService.addUser(new User("prashanth", "vobilishetty","Prashanth Prashu", new BCryptPasswordEncoder().encode("prashu123"),"prashanthv@gmail.com",UserRole.STUDENT," Graduate STUDENT","9959931848" ));

        mv.addObject("Student_Count",userService.getUserCount(UserRole.STUDENT));
        mv.addObject("ADMIN_Count",userService.getUserCount(UserRole.ADMIN));
        mv.addObject("INSTRUCTOR_Count",userService.getUserCount(UserRole.INSTRUCTOR));
        mv.addObject("GUEST_Count",userService.getUserCount(UserRole.GUEST));



        return mv;
    }
}

UserController :

package com.csye6220.esdfinalproject.controller;

import com.csye6220.esdfinalproject.model.User;
import com.csye6220.esdfinalproject.service.UserDetailsServiceImpl;
import com.csye6220.esdfinalproject.service.UserService;
import jakarta.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;

import java.security.Principal;

@RestController
@RequestMapping("/user")
public class UserController {

    @Autowired
    UserService userService;

    @Autowired
    private UserDetailsServiceImpl userDetailsService;


// get user by username
    @GetMapping("/{username}")
    public User getUser(@PathVariable("username") String username){
        return this.userService.getUserByusername(username);
    }

    @GetMapping("/current-user")
    public User getCurrentUser(Principal principal) {
        return ((User) this.userDetailsService.loadUserByUsername(principal.getName()));
    }

//delete user by user ID
    @DeleteMapping("/{id}")
    public void deleteUser(@PathVariable("id") Long id){
         this.userService.deleteUserById((id));
    }
}


